class t extends HTMLElement{constructor(){super(),this.tags=["h1","p"],this.tag="p",this.shadow=this.attachShadow({mode:"open"}),this.tags.includes(this.getAttribute("tag"))&&(this.tag=this.getAttribute("tag")||this.tag),this.render()}render(){const t=document.createElement(this.tag);t.textContent=this.textContent,this.shadow.appendChild(t)}}customElements.define("my-text",t),customElements.define("todo-item",class extends HTMLElement{constructor(){super(),this.checked=!1,this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){this.title=this.getAttribute("title")||"",this.checked=this.hasAttribute("checked"),this.id=this.getAttribute("id");const t=document.createElement("style");t.innerHTML="\n\n\n                .root {\n                    border-radius: 4px;\n                    padding: 22px 13px;\n                    background-color: #FFF599;\n                    margin-bottom: 15px;\n                    font-size: 18px;\n                    font-family: Roboto;\n                    font-style: normal;\n                    font-weight: 400;\n                    line-height: normal;\n                    display: flex;\n                    align-items: flex-start;\n                    justify-content: space-between;\n                    height: 64px;\n                    width: 79.5%;\n                }\n\n                @media (min-width: 960px) {              \n                    .root {\n                        display: flex;\n                        min-width: 280px;\n                    }\n                }\n\n                .titulo {\n                    margin: 0;\n                }\n\n                .titulo.checked {\n                    text-decoration: line-through;\n                }\n\n            ",this.shadow.appendChild(t),this.render()}addListeners(){const t=this.shadow.querySelector(".checkbox-input");t?.addEventListener("click",(t=>{const n=t.target,e=new CustomEvent("change",{detail:{id:this.id,value:n.checked}});this.dispatchEvent(e)}))}render(){const t=document.createElement("div");t.innerHTML=`\n                <div class="root">\n                    <h4 class="titulo ${this.checked?"checked":""}">\n                        ${this.title}\n                    </h4>\n                    <div>\n                        <input type="checkbox" class="checkbox-input"  ${this.checked?"checked":""}>\n                    </div>\n                </div>\n            `,this.classList.add("todo-item"),this.shadow.appendChild(t),this.addListeners()}}),customElements.define("my-header",class extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){const t=document.createElement("style");t.innerHTML="\n            .header {\n                background-color: #FF8282;\n                height: 68px;\n                display: block;\n            }\n            ",this.shadow.appendChild(t),this.render()}render(){const t=document.createElement("div");t.innerHTML='\n                <header class="header">\n                </header>\n            ',this.shadow.appendChild(t)}});const n={data:{tasks:[{id:1,title:"primer item",completed:!1},{id:2,title:"segundo item",completed:!0},{id:3,title:"tercer item",deleted:!0}]},listeners:[],init(){const t=localStorage.getItem("saved-state");this.setState(JSON.parse(t))},getState(){return this.data},getEnabledTasks(){return this.getState().tasks.filter((t=>!t.deleted))},addTask(t,n){const e=this.getState();e.tasks.push({id:t,title:n,completed:!1}),this.setState(e)},changeItemState(t,n){const e=this.getState();e.tasks.find((n=>n.id==t)).completed=n,this.setState(e)},setState(t){this.data=t;for(const n of this.listeners)n(t),localStorage.setItem("saved-state",JSON.stringify(t));console.log("soy el state he cambiado ",this.data)},subscribe(t){this.listeners.push(t)}};!function(){n.init();!function(t){const e=document.createElement("div"),i=n.getEnabledTasks(),s=document.createElement("style");e.innerHTML='\n        <my-header></my-header>\n        <div class="div-container">\n            <h1 class="home-title">Mis pendientes</h1>\n            <div class="container">\n                <div class="input-container">\n                    <p class="p">Nuevo pendiente</p>\n                    <input type="text" class="input">\n                </div>\n                <button class="add-button">Agregar</button>\n            </div>\n            <ul class="lista">\n            </ul>\n        </div>\n    ';const a=e.querySelector(".lista");s.innerHTML="\n        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\n\n        .div-container {\n            display: flex;\n            flex-direction: column;\n        }\n\n        @media (min-width: 960px) {\n            .div-container {\n                justify-content: center;\n                padding: 48px 160px 0px 160px;\n                gap: 30px;\n            }\n        }\n\n        .home-title { \n            font-family: 'Roboto', sans-serif;\n            font-size: 52px;\n            font-weight: 700;\n            padding: 41px 74px 25px 30px;\n            margin: 0;\n        }\n\n        @media (min-width: 960px) {\n            .home-title {\n                padding: 0;\n            }\n        }\n\n        .container {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            margin-left: 31px;\n            margin-bottom: 46px;\n            width: 100%;\n        }\n\n        @media (min-width: 960px) {\n            .container {\n                margin: 0;\n                flex-direction: row;\n                align-items: flex-end;\n                align-self: center;\n            }\n        }\n\n        .input-container {\n            width: 82.5%;\n        }\n\n        @media (min-width: 960px) {\n            .input-container {\n                display: flex;\n                flex-direction: column;\n                width: 70%;\n            }\n        }\n\n        .input {\n            width: 100%;\n            height: 55px;\n            border-radius: 4px;\n            border: 2px solid #000;\n            margin-bottom: 12px;\n        }\n\n        @media (min-width: 960px) {\n            .input {\n                width: 95%;\n                margin-bottom: 0px;\n            }\n        }\n\n        .p {\n            font-size: 18px;\n            font-family: Roboto;\n            font-weight: 400;\n            margin-bottom: 0px;\n        }\n\n        .add-button {\n            width: 84.5%;\n            height: 55px;\n            flex-shrink: 0;\n            border: none;\n            border-radius: 4px;\n            background: #9CBBE9;\n            color: #000;\n            text-align: center;\n            font-size: 22px;\n            font-family: Roboto;\n            font-style: normal;\n            font-weight: 500;\n            line-height: normal;\n        }\n\n        @media (min-width: 960px) {\n            .add-button {\n                width: 35%;\n                height: 60px;\n            }\n        }\n\n        .add-button:hover {\n            cursor: pointer;\n        }\n\n        .lista {\n            display: flex;\n            flex-direction: column;\n            width: 100%;\n            padding: 0;\n            margin: 0 31px;\n            height: auto;\n        }\n\n        @media (min-width: 960px) {\n            .lista {\n                flex-flow: row wrap;\n                justify-content: space-around;\n                margin: 0;\n                padding: 0;\n                gap: 10px;\n            }\n        }\n    ";const d=e.querySelector(".add-button"),o=e.querySelector(".input");function r(t){a.innerHTML="";for(const e of t){const t=document.createElement("todo-item");t.setAttribute("title",e.title),t.setAttribute("id",e.id),e.completed&&t.setAttribute("checked","true"),t.addEventListener("change",(t=>{n.changeItemState(t.detail.id,t.detail.value)})),a?.appendChild(t)}}n.subscribe((()=>{r(n.getEnabledTasks())})),r(i),d.addEventListener("click",(()=>{""==o.value?alert("Por favor, inserta un task"):n.addTask(Math.random(),o.value)})),e.appendChild(s),t.appendChild(e)}(document.querySelector(".root"))}();
//# sourceMappingURL=index.52ac811a.js.map
